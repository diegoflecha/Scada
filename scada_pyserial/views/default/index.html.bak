{{extend 'layout.html'}}
<h1>SCADA COMUNICACIÓN ARDUINO</h1>
<head>
<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   width="210mm"
   height="220mm"
   id="svg3027"
   version="1.1"
   inkscape:version="0.48.4 r9939"
   sodipodi:docname="diseño_scada2.svg">
  <defs
     id="defs3029" />
  <sodipodi:namedview
     id="base"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageopacity="0.0"
     inkscape:pageshadow="2"
     inkscape:zoom="2.8"
     inkscape:cx="500"
     inkscape:cy="300"
     inkscape:document-units="px"
     inkscape:current-layer="g45"
     showgrid="false"
     inkscape:window-width="700"
     inkscape:window-height="100"
     inkscape:window-x="0"
     inkscape:window-y="0"
     inkscape:window-maximized="1" />
  <metadata
     id="metadata3032">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
      </cc:Work>
    </rdf:RDF>
  </metadata>
    ///////////////////////////////////////////////////////////////ALARMA//////////////////////////////////////////////////////////
  <g
     inkscape:label="Capa 1"
     inkscape:groupmode="layer"
     id="layer1">
    <path
       sodipodi:type="arc"
       style="fill:#00ff00;display:inline"
       id="ALARMA"
       sodipodi:cx="375"
       sodipodi:cy="277.36218"
       sodipodi:rx="65"
       sodipodi:ry="65"
       d="m 440,277.36218 a 65,65 0 1 1 -130,0 65,65 0 1 1 130,0 z"
       inkscape:transform-center-x="4.9176474"
       inkscape:transform-center-y="-5"
       transform="matrix(0.98352958,0,0,1,101.10635,222.92333)" />
    <path
       style="fill:#000000;display:inline"
       d="m 419.49388,331.16969 0,-79.25337 9.0939,0 9.094,0 0,70.00714 0,70.00714 35.0766,0 35.0766,0 0,-70.00714 0,-70.00714 9.0939,0 9.094,0 0,79.25337 0,79.25336 -53.2645,0 -53.2645,0 0,-79.25336 z"
       id="contorno_deposito"
       inkscape:connector-curvature="0" />
      
      //////////////////////////////////////////////////////////NIVEL/////////////////////////////////////////////////////////////////
    <rect
       style="fill:#0000ff"
       id="nivel"
       width="68.847069"
       height="0"
       x="-507.18188"
       y="-396.16968"
       transform="scale(-1,-1)" /> />
    <text
       xml:space="preserve"
       style="font-size:39.66922379px;font-style:italic;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;display:inline;font-family:URW Chancery L;-inkscape-font-specification:URW Chancery L Medium Italic"
       x="30.73712"
       y="512.91113"
       id="text3142"
       sodipodi:linespacing="125%"
       transform="scale(0.99173056,1.0083384)"><tspan
         sodipodi:role="line"
         id="tspan3144"
         x="30.73712"
         y="512.91113"
         style="font-style:italic;font-variant:normal;font-weight:normal;font-stretch:normal;font-family:Abyssinica SIL;-inkscape-font-specification:Abyssinica SIL Italic">FINAL DE CARRERA</tspan></text>
    <text
       xml:space="preserve"
       style="font-size:39.66922379px;font-style:italic;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;display:inline;font-family:URW Chancery L;-inkscape-font-specification:URW Chancery L Medium Italic"
       x="191.41669"
       y="713.70947"
       id="text3146"
       sodipodi:linespacing="125%"
       transform="scale(0.99173056,1.0083384)"><tspan
         sodipodi:role="line"
         id="tspan3148"
         x="191.41669"
         y="713.70947"
         style="font-style:italic;font-variant:normal;font-weight:normal;font-stretch:normal;font-family:Abyssinica SIL;-inkscape-font-specification:Abyssinica SIL Italic">CAUDAL</tspan></text>
    <text
       xml:space="preserve"
       style="font-size:40px;font-style:italic;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;display:inline;font-family:URW Chancery L;-inkscape-font-specification:URW Chancery L Medium Italic"
       x="190.68387"
       y="363.03156"
       id="text3073"
       sodipodi:linespacing="125%"><tspan
         sodipodi:role="line"
         id="tspan3075"
         x="190.68387"
         y="363.03156"
         style="font-style:italic;font-variant:normal;font-weight:normal;font-stretch:normal;font-family:Abyssinica SIL;-inkscape-font-specification:Abyssinica SIL Italic">NIVEL</tspan></text>
      //////////////////////////////////////////////////TURBINA////////////////////////////////////////////////////
    <g
       transform="translate(467.60059,732.7366)"
       id="g45">
      <!-- Create a Cartesian coordinate system (with the y-axis flipped) for the animated square. That is, place the origin at the center of the 800 x 800 SVG6 viewport: -->
      <!-- A 200 x 200 square with the upper left-hand corner at (-100, -100). This places the center of the square 
      at the origin (0, 0): -->
      <rect
         id="turbina"
         x="-3.7224905"
         y="-51.081161"
         width="7.8024812"
         height="102.14628"
         rx="0.39012405"
         ry="5.1073141"
         style="fill:#ffa500;stroke:#000000;stroke-width:0.84693271;stroke-dasharray:2.82310895, 1.41155447"
         transform="matrix(-0.04488517,0.99899215,-0.99999997,-2.6162865e-4,0,0)" />
      <!-- Represents the x-axis: -->
      <line
         x1="-5"
         y1="0"
         x2="5"
         y2="0"
         style="stroke:#000000"
         id="line48" />
      <!-- Represents the y-axis (although up is negative and down is positive): -->
      <line
         x1="0"
         y1="-5"
         x2="0"
         y2="5"
         style="stroke:#000000"
         id="line50" />
        /////////////////////////////////////TURBINA-3/////////////////////////////////////////////////////////////////
      <rect
         id="turbina-3"
         x="-2.4846187"
         y="-51.049026"
         width="7.8024812"
         height="102.14628"
         rx="0.39012405"
         ry="5.1073141"
         style="fill:#ffa500;stroke:#000000;stroke-width:0.84693271;stroke-dasharray:2.82310897, 1.41155447"
         transform="matrix(-0.99899215,-0.04488517,2.6162865e-4,-0.99999997,0,0)" />
     
    </g>
  </g>
</svg>
    
</body>

<style type="text/css">
    
    
body {background-color:grey}
p {color:grey}
</style>
</head>
<div></div>
<div id="lista1">lista</div>
<input type="button" id="start" value="START">
<input type="button" id="stop" value="STOP">
<div id="valor">valor a enviar</div>
<div></div>
<br>
<div id="valor_recibido"></div><br>
<div id="valor_nivel"></div><br>
<div id="valor_caudal"></div><br>
<div id="fecha">fechdfgsda</div>
<div id="hora">horasddssd</div>
<script language="javascript">
    

    
var dato_on=document.getElementById("valor"); 
var nivel= document.getElementById("nivel");      
var lista =document.getElementsByTagName("lista");            
var ALARMA= document.getElementById("ALARMA");    
var turbina= document.getElementById("turbina");
var turbina3= document.getElementById("turbina-3");

var thetaDelta  = 2;
var initialTheta = 0;
    
turbina.currentTheta = initialTheta; // The initial rotation angle to use when the animation starts, stored in a custom property.
turbina3.currentTheta = initialTheta + 90;
//////////////////////////////////////////////////////////////////////TEMPORIZADOR   HORA///////////////////////////////////////////////////

  function temporizador() {
        timer = setTimeout("temporizador()", 1000);
        pidehora();
 }

  function pidehora() {
        jQuery.post( "{{=URL('default','pide_hora.json')}}")
        .success(function(datos_recibidos) {
                  jQuery("#fecha").html(datos_recibidos["fecha"]);
                  jQuery("#hora").html(datos_recibidos["hora"]); 
         
        });
 } 
    

 
  function temporizadorfc() {
        timerfc = setTimeout("temporizadorfc()",990);
        pide();
  }

  function pide() {
        jQuery.post( "{{=URL('default','pide_datos.json')}}")
        .success(function(datos_recibidos) {
         var valor_alarma =document.getElementById("valor_recibido");  
         jQuery("#valor_recibido").html(datos_recibidos["dato_alarma"]);  
         var valor_nivel =document.getElementById("valor_nivel"); 
         jQuery("#valor_nivel").html(datos_recibidos["dato_nivel"]);  
         var nivel_caudal= document.getElementById("valor_caudal");   
         jQuery("#valor_caudal").html(datos_recibidos["dato_caudal"]); 
         
         var dato_nivel1=valor_nivel.innerHTML; 
         console.log(dato_nivel1);  
         nivel.setAttribute("height",dato_nivel1 * 15);             
            
         var dato_alarma1=valor_alarma.innerHTML;
         console.log(dato_alarma1); 
            
           
         var  velocidad = nivel_caudal.innerHTML; 
         console.log(velocidad); 
            
         if (dato_alarma1==1)
                 {
                 ALARMA.setAttribute("style","fill:red");
                 }
        if (dato_alarma1==0)
                 {
                  ALARMA.setAttribute("style","fill:yellow");
                 }
 

        turbina.setAttribute("transform", "rotate(" + turbina.currentTheta + ")"); // Rotate the square by a small amount.
        turbina.currentTheta += velocidad *2 ;  // Increase the angle that the square will be rotated to, by a small amount.
        turbina3.setAttribute("transform", "rotate(" + turbina3.currentTheta + ")"); // Rotate the square by a small amount.
        turbina3.currentTheta += velocidad *2 ;  // Increase the angle that the square will be rotated to, by a small amount.   

    
   
        });
  }
  function encender(){
      jQuery("#valor").html(1); 
      var on = dato_on.innerHTML;
      var datos={'operando1':on};
      jQuery.post("{{=URL('default','recibe_datos.json')}}", datos, {contentType: 'application/json'} ) 
      
  }
      function apagar() {
      jQuery("#valor").html(0); 
      var on = dato_on.innerHTML;
      var datos={'operando1':on};
      jQuery.post("{{=URL('default','recibe_datos.json')}}", datos, {contentType: 'application/json'} ) 
    
  }
     
               
    jQuery(document).ready(function() {
      timer = setTimeout("temporizador()", 1000);
      timerfc = setTimeout("temporizadorfc()", 1000);
  
      });
   
      jQuery(document).ready(function() {
      timer = setTimeout("temporizador()", 500);
      
      jQuery(":button#start").click(function() {
          encender();
          
      });



    });    
          jQuery(document).ready(function() {
      timer = setTimeout("temporizador()", 500);
      
      jQuery(":button#stop").click(function() {
          apagar();
          
      });



    });   


                    
              
</script>
