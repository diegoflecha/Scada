(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> int() argument must be a string or a number, not 'NoneType'"
p3
sS'layer'
p4
S'/home/diego/web2py/applications/scada_pyserial/controllers/default.py'
p5
sS'code'
p6
S'import math\nimport datetime\nimport serial\nimport time\n\nglobal puerto_Serie\n\npuerto_Serie=serial.Serial(\'/dev/ttyACM0\', 9600)\n\npuerto_Serie.close()\npuerto_Serie.open()\nglobal dato_caudal\nglobal dato_alarma\nglobal dato_nivel\nglobal lista\nnivel_recibido= \'\'\n\n\n\nbuffer=""\ndato_alarma=""\ndato_nivel=""\ndato_caudal=""\nlista=[]\npuerto_Serie.close() \npuerto_Serie.open()\n\nif puerto_Serie.inWaiting()>0:\n    \n    buffer = buffer + puerto_Serie.read(puerto_Serie.inWaiting())\n    \n    if \'\\n\' in buffer:\n           \n           nivel_recibido, buffer = buffer.split(\'\\n\')[-2:]\n           dato_alarma=nivel_recibido[0]\n           dato_nivel= nivel_recibido[1]\n           dato_caudal= nivel_recibido[2]  \n           lista= [ dato_alarma,dato_nivel,dato_caudal]\n    \n            \n\n        \n    \n           time.sleep(0.01)\n           \n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simply replace the two lines below with:\n    return auth.wiki()\n    """\n    response.flash = T("Welcome to web2py!")\n    return dict(message=T(\'Hello World\'))\n\n\n\ndef pide_hora():\n \n    hora=datetime.datetime.now().strftime("%H:%M:%S")\n    fecha=datetime.datetime.now().strftime("%d-%m-%Y")\n    return dict(hora=hora,fecha=fecha)\n\ndef pide_datos():\n    \n    print lista\n\n    return dict(dato_alarma=dato_alarma,dato_nivel=dato_nivel,dato_caudal=dato_caudal)\n\ndef recibe_datos():\n    print "hola"\n    operando1=int(request.vars.operando1)\n    print operando1\n    resultado=math.pow(operando1, 1)\n    print resultado\n \n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    use @auth.requires_login()\n    @auth.requires_membership(\'group name\')\n    @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n        A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n      or with the signed load operator\n     LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\nresponse._vars=response._caller(recibe_datos)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/diego/web2py/gluon/restricted.py", line 224, in restricted\n    exec ccode in environment\n  File "/home/diego/web2py/applications/scada_pyserial/controllers/default.py", line 132, in <module>\n  File "/home/diego/web2py/gluon/globals.py", line 392, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/diego/web2py/applications/scada_pyserial/controllers/default.py", line 74, in recibe_datos\n    operando1=int(request.vars.operando1)\nTypeError: int() argument must be a string or a number, not \'NoneType\'\n'
p11
s.